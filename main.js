(()=>{"use strict";const e=()=>{const e=[],t=[];for(let t=0;t<10;t+=1)e[t]=new Array(10).fill({});return{getTile:(t,n)=>e[t][n],placeShip:({row:n,col:s,length:o,isVertical:i})=>{const r=(e=>{const t=new Array(e).fill(!1);return{getLength:()=>e,isSunk:()=>t.every((e=>e)),hit:e=>{t[e]=!0}}})(o);if(t.push(r),i)for(let t=0;t<o;t+=1)e[n+t][s]={ship:r,pos:t};else for(let t=0;t<o;t+=1)e[n][s+t]={ship:r,pos:t}},receiveAttack:(t,n)=>{const s=e[t][n];return s.ship?(s.hit=!0,s.ship.hit(s.pos),!0):(e[t][n]={miss:!0},!1)},isAllSunk:()=>t.every((e=>e.isSunk())),isValidTarget:(t,n)=>{const s=e[t][n];return!(s.miss||s.hit)},getWidth:()=>e[0].length,getHeight:()=>e.length}},t=()=>{const e=[];let t=0;const n=[[0,-1],[-1,0],[0,1],[1,0]],s=e=>Math.floor(e*Math.random()),o=()=>{const e=s(10),t=s(10);return Promise.resolve([e,t])};return{takeTurn:async function(n,s){let o,i,r=!1;for(;!r;)[o,i]=await s(),r=n.isValidTarget(o,i);const l=n.receiveAttack(o,i);return l&&(e.push([o,i]),t=0),Promise.resolve({row:o,col:i,hit:l})},randomTarget:o,aiTarget:()=>{if(4===t&&(e.pop(),t=0),0===e.length)return o();let s,i;[s,i]=e[e.length-1];const r=n[t];return s+=r[0],i+=r[1],t+=1,Promise.resolve([s,i])}}};function n(e,t){let n,s;return e.hit||e.miss||e.ship&&t?e.miss?(s="cell-miss",n="."):e.hit&&e.ship.isSunk()?(s="cell-sunk",n="X"):e.hit?(s="cell-hit",n="x"):(s="cell-ship",n="T"):(s="cell-empty",n="O"),{symbol:n,category:s}}function s(e,t=!1,s){const o=document.createElement("div"),i=document.createElement("table");o.appendChild(i);const r=e.getWidth(),l=e.getHeight();for(let o=0;o<l;o+=1){const l=document.createElement("tr");i.appendChild(l);for(let i=0;i<r;i+=1){const r=document.createElement("td");l.appendChild(r);const c=document.createElement("button");r.append(c);const a=n(e.getTile(o,i),t);c.className=a.category,c.innerText=a.symbol,!t&&s&&c.addEventListener("click",(()=>{s.emit("target-select",[o,i])}))}}return o}const o=function(e,t,n,o){const i=s(t,n,o);e.firstChild?e.replaceChild(i,e.firstChild):e.appendChild(i)};function i(){const t=e();return t.placeShip({row:4,col:5,length:2,isVertical:!0}),t}const r=async function(){const e=t(),n=t(),s=i(),r=i(),l=(e=>{const t=e||{};return{subscribe:(e,n)=>((t[e]||(t[e]=[])).push(n),{unsubscribe:()=>{t[e]&&t[e].splice(t[e].indexOf(n)>>>0,1)}}),emit:(e,n)=>{(t[e]||[]).forEach((e=>{e(...n)}))}}})(),c=()=>function(e){let t;const n=new Promise((n=>{t=e.subscribe("target-select",((e,t)=>{n([e,t])}))}));return n.finally((()=>{t.unsubscribe()})),n}(l),a=document.getElementById("board1"),u=document.getElementById("board2");for(o(a,s,!0),o(u,r,!1,l);!s.isAllSunk();){o(a,s,!0);const t=await e.takeTurn(r,c);if(console.log("Human: ",t),r.isAllSunk())break;o(u,r,!1,l);const i=await n.takeTurn(s,n.aiTarget);console.log("AI: ",i)}o(a,s,!0),o(u,r,!1),console.log("game over")};console.log("webpack compiled to main.js"),Promise.resolve("loaded").then((()=>{r()})),console.log("end of main.js")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,