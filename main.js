(()=>{"use strict";const e=()=>{const e=[],t=[];for(let t=0;t<10;t+=1)e[t]=new Array(10).fill({});return{getTile:(t,n)=>e[t][n],placeShip:({row:n,col:i,length:r,isVertical:s})=>{const o=(e=>{const t=new Array(e).fill(!1);return{getLength:()=>e,isSunk:()=>t.every((e=>e)),hit:e=>{t[e]=!0}}})(r);if(t.push(o),s)for(let t=0;t<r;t+=1)e[n+t][i]={ship:o,pos:t};else for(let t=0;t<r;t+=1)e[n][i+t]={ship:o,pos:t}},receiveAttack:(t,n)=>{const i=e[t][n];return i.ship?(i.hit=!0,i.ship.hit(i.pos),!0):(e[t][n]={miss:!0},!1)},isAllSunk:()=>t.every((e=>e.isSunk())),isValidTarget:(t,n)=>{if(t<0||t>=10||n<0||n>=10)return!1;const i=e[t][n];return!(i.miss||i.hit)},getWidth:()=>e[0].length,getHeight:()=>e.length}},t=()=>{const e=[];let t=0;const n=[[0,-1],[-1,0],[0,1],[1,0]],i=e=>Math.floor(e*Math.random()),r=()=>{const e=i(10),t=i(10);return Promise.resolve([e,t])};return{takeTurn:async function(n,i){let r,s,o=!1;for(;!o;)[r,s]=await i(),o=n.isValidTarget(r,s);const c=n.receiveAttack(r,s);return c&&(e.push([r,s]),t=0),Promise.resolve({row:r,col:s,hit:c})},randomTarget:r,aiTarget:()=>{if(4===t&&(e.pop(),t=0),0===e.length)return r();let i,s;[i,s]=e[e.length-1];const o=n[t];return i+=o[0],s+=o[1],t+=1,Promise.resolve([i,s])}}};function n(e,t){let n,i;return e.hit||e.miss||e.ship&&t?e.miss?(i="cell-miss",n="."):e.hit&&e.ship.isSunk()?(i="cell-sunk",n="X"):e.hit?(i="cell-hit",n="x"):(i="cell-ship",n="T"):(i="cell-empty",n="O"),{symbol:n,category:i}}const i=function(e,t,i,r){const s=function(e,t=!1,i){const r=document.createElement("div"),s=document.createElement("table");r.appendChild(s);const o=e.getWidth(),c=e.getHeight();for(let r=0;r<c;r+=1){const c=document.createElement("tr");s.appendChild(c);for(let s=0;s<o;s+=1){const o=document.createElement("td");c.appendChild(o);const l=document.createElement("button");o.append(l);const a=n(e.getTile(r,s),t);l.className=a.category,l.innerText=a.symbol,!t&&i&&l.addEventListener("click",(()=>{i.emit("target-select",[r,s])}))}}return r}(t,i,r);e.firstChild?e.replaceChild(s,e.firstChild):e.appendChild(s)},r=function(e,t,n){const i=function(e,t){const n=document.createElement("p");return n.innerText=`${t} targeted [${e.row}, ${e.col}].`,e.hit&&(n.innerText+=" Hit!"),n}(t,n);e.appendChild(i)},s=function(e,t){const n=document.createElement("p");e.appendChild(n),n.innerText=`${t} Wins!`};function o(){const t=e();return t.placeShip({row:4,col:5,length:2,isVertical:!0}),t}const c=async function(){const e=t(),n=t(),c=o(),l=o(),a=(e=>{const t=e||{};return{subscribe:(e,n)=>((t[e]||(t[e]=[])).push(n),{unsubscribe:()=>{t[e]&&t[e].splice(t[e].indexOf(n)>>>0,1)}}),emit:(e,n)=>{(t[e]||[]).forEach((e=>{e(...n)}))}}})(),u=()=>function(e){let t;const n=new Promise((n=>{t=e.subscribe("target-select",((e,t)=>{n([e,t])}))}));return n.finally((()=>{t.unsubscribe()})),n}(a),d=document.getElementById("board1"),h=document.getElementById("board2"),m=document.getElementById("log");for(i(d,c,!0),i(h,l,!1,a);!c.isAllSunk();){i(d,c,!0);const t=await e.takeTurn(l,u);if(r(m,t,"Human"),l.isAllSunk())break;i(h,l,!1,a);const s=await n.takeTurn(c,n.aiTarget);r(m,s,"AI")}c.isAllSunk()?(i(d,c,!0),i(h,l,!0),s(m,"AI")):(i(h,l,!0),s(m,"Human"))};console.log("webpack compiled to main.js"),Promise.resolve("loaded").then((()=>{c()})),console.log("end of main.js")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,